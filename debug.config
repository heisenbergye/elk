input {
  stdin {
    type => "syslog"
    id => "syslog1"
  }
}

filter {
    if [type] == "syslog" {
        grok {
            match => { "message" => "^<%{POSINT:syslog_pri}>(\d{1,3}\s)?(?:%{TIMESTAMP_ISO8601:timestamp})\s%{SYSLOGHOST:syslog_hostname}\s%{PROG:syslog_program}\s(?:%{POSINT:syslog_pid}|-)?\s%{WORD:log_type}\s\[.+?\s%{GREEDYDATA:kvmessage}\]$" }
        }

        if !("_grokparsefailure" in [tags]) {
            mutate {
                add_tag => [ "_junos_structured_log" ]
            }
            if [message] =~ "RT_FLOW_SESSION" {
                mutate {
                    add_tag => [ "RT_FLOW" ]
                }
            }
            if [message] =~ "APPTRACK_SESSION" {
                mutate {
                    add_tag => [ "APPTRACK" ]
                }
            }

            kv {
                source => "kvmessage"
                    trim_value => "\""
                    remove_field => [ "kvmessage" ]
                    remove_field => [ "message" ]                    
            }

            if [bytes-from-client]{
                mutate {
                    convert => { "bytes-from-client" => "integer" }                                                  
                }
            }
            if [bytes-from-server]{
                mutate {
                    convert => { "bytes-from-server" => "integer" }                    
                }
            }
            if [packets-from-client]{
                mutate {
                    convert => { "packets-from-client" => "integer" }                    
                }
            }
            if [packets-from-server]{
                mutate {
                    convert => { "packets-from-server" => "integer" }                    
                }
            }
            if [elapsed-time]{
                mutate {
                    convert => { "elapsed-time" => "integer" }                    
                }
            }
            geoip {
                source => "destination-address"
                    add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
                    add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
            }
            mutate {
                convert => [ "[geoip][coordinates]", "float" ]
            }
        }
        else {
            grok {
                remove_tag => [ "_grokparsefailure" ]
                match => { "message" => "^<%{POSINT:syslog_pri}>(\d{1,3}\s)?(?:%{TIMESTAMP_ISO8601:timestamp})\s%{SYSLOGHOST:syslog_hostname}\s(?:%{PROG:syslog_program}|-)\s(?:%{POSINT:syslog_pid}|-)\s-\s-\s%{GREEDYDATA:message}" }
                overwrite => [ "message" ]
                add_tag => [ "_junos_unstructured_log" ]
            }
        }
    }
}

output {
  stdout {}
}

